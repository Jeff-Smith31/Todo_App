#!/usr/bin/env bash
set -euo pipefail

# Usage: ./backend-up.sh [FRONTEND_ORIGIN]
# Example: ./backend-up.sh http://192.168.1.10:8000
# If FRONTEND_ORIGIN is omitted, defaults to http://localhost:8000

FRONTEND_ORIGIN="${1:-${CORS_ORIGIN:-http://localhost:8000}}"
ENV_FILE=".env"

# Create .env with secure defaults if missing
if [ ! -f "$ENV_FILE" ]; then
  echo "Creating $ENV_FILE"
  JWT_SECRET_VAL="${JWT_SECRET:-}"
  if [ -z "$JWT_SECRET_VAL" ]; then
    # generate a random secret
    JWT_SECRET_VAL=$(head -c 48 /dev/urandom | base64 | tr -d '\n' | cut -c1-48)
  fi

  # Generate VAPID keys if web-push is available and keys not provided
  if [ -z "${WEB_PUSH_PUBLIC_KEY:-}" ] || [ -z "${WEB_PUSH_PRIVATE_KEY:-}" ]; then
    if command -v npx >/dev/null 2>&1; then
      echo "Generating Web Push VAPID keys via npx web-push..."
      KEYS_JSON=$(npx --yes web-push generate-vapid-keys --json 2>/dev/null || true)
      if [ -n "$KEYS_JSON" ]; then
        WEB_PUSH_PUBLIC_KEY=$(echo "$KEYS_JSON" | sed -n 's/.*"publicKey"[^"]*"\([^"]*\)".*/\1/p')
        WEB_PUSH_PRIVATE_KEY=$(echo "$KEYS_JSON" | sed -n 's/.*"privateKey"[^"]*"\([^"]*\)".*/\1/p')
      else
        echo "Warning: Failed to auto-generate VAPID keys. You can set WEB_PUSH_PUBLIC_KEY and WEB_PUSH_PRIVATE_KEY later in .env"
      fi
    else
      echo "Note: Install Node.js to auto-generate VAPID keys (npx web-push). Skipping generation."
    fi
  fi

  {
    echo "# Auto-generated by backend-up.sh"
    echo "CORS_ORIGIN=$FRONTEND_ORIGIN"
    echo "JWT_SECRET=${JWT_SECRET_VAL}"
    echo "WEB_PUSH_PUBLIC_KEY=${WEB_PUSH_PUBLIC_KEY:-}"
    echo "WEB_PUSH_PRIVATE_KEY=${WEB_PUSH_PRIVATE_KEY:-}"
    echo "DDB_TABLE_PREFIX=${DDB_TABLE_PREFIX:-ttt}"
  } > "$ENV_FILE"
else
  # Update CORS_ORIGIN if provided
  if grep -q '^CORS_ORIGIN=' "$ENV_FILE"; then
    sed -i.bak "s#^CORS_ORIGIN=.*#CORS_ORIGIN=$FRONTEND_ORIGIN#" "$ENV_FILE" && rm -f "$ENV_FILE.bak"
  else
    echo "CORS_ORIGIN=$FRONTEND_ORIGIN" >> "$ENV_FILE"
  fi
fi

echo "Starting backend container with Docker Compose (service: backend)..."
docker compose up --build -d backend

echo "Backend is starting. HTTPS port: 8443 (HTTP 8080 redirects to HTTPS)"
echo "If running on LAN, access it at: https://<YOUR-LAN-IP>:8443"
echo "Ensure your frontend uses this origin in the browser: localStorage.setItem('tt_backend_url','https://<YOUR-LAN-IP>:8443')"}