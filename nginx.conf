# Nginx config for TickTock Tasks serving frontend and proxying API on same instance
# TLS can be provisioned via Certbot; this file serves HTTP and static SPA assets.

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;
  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  # Upstream backend (Docker Compose service name)
  upstream ticktock_backend {
    server backend:8080;
  }

  server {
    listen 80 default_server;
    server_name _;

    # ACME webroot for Certbot challenges
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      default_type "text/plain";
    }

    # Health endpoint for container healthchecks (Nginx only, no backend dependency)
    location = /nginx-healthz {
      add_header Cache-Control "no-store";
      default_type text/plain;
      return 200 "ok";
    }

    # Backend health passthrough (optional)
    location = /healthz {
      add_header Cache-Control "no-store";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://ticktock_backend/healthz;
    }

    # API -> Backend
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_pass http://ticktock_backend;
    }

    # Serve static frontend (SPA)
    root /usr/share/nginx/html;
    index index.html;

    # Cache control for static assets
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?|ttf|eot)$ {
      expires 30d;
      add_header Cache-Control "public, max-age=2592000, immutable";
      try_files $uri =404;
    }

    # Service worker and manifest shouldn't be cached too aggressively
    location = /sw.js { expires 1h; add_header Cache-Control "public, max-age=3600"; try_files $uri =404; }
    location = /manifest.webmanifest { expires 1h; add_header Cache-Control "public, max-age=3600"; try_files $uri =404; }
    location = /config.js { expires -1; add_header Cache-Control "no-store"; try_files $uri =404; }

    # SPA fallback
    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}
