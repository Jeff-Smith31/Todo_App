# Nginx config for TickTock Tasks serving frontend (apex/www) and routing api subdomain to backend on the same instance
# TLS may be enabled via Let's Encrypt (Certbot) using the webroot at /var/www/certbot.

user  nginx;
worker_processes  auto;

error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  access_log    /dev/stdout;
  sendfile        on;
  keepalive_timeout  65;
  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  # Upstream backend (Docker Compose service name)
  upstream ticktock_backend {
    server backend:8080;
  }


  # ---------------------------------------------
  # HTTP (port 80) - API: api.ticktocktasks.com -> backend container
  # ---------------------------------------------
  server {
    listen 80 default_server;
    server_name _;

    # ACME webroot for Certbot challenges
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      default_type "text/plain";
    }

    # Nginx-only health endpoint
    location = /nginx-healthz {
      add_header Cache-Control "no-store";
      default_type text/plain;
      return 200 "ok";
    }

    # Health endpoint (proxies to backend health)
    location = /healthz {
      add_header Cache-Control "no-store";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://ticktock_backend/healthz;
    }

    # Proxy all API requests directly to backend
    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_buffering off;
      proxy_request_buffering off;
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
      proxy_pass http://ticktock_backend;
    }
  }

  # Note: HTTPS server block removed to avoid Nginx startup failure when certs are absent.
# All traffic should use HTTP (port 80). CloudFront forwards to API over HTTP.

}
