name: Deploy Serverless Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'serverless/**'
      - '.github/workflows/deploy-serverless.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
      STACK_NAME: ${{ vars.STACK_NAME || 'tictock-serverless' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Install backend deps
        working-directory: serverless
        run: npm install --no-audit --no-fund

      - name: SAM build
        working-directory: serverless
        run: sam build --use-container

      - name: SAM deploy
        working-directory: serverless
        run: |
          sam deploy \
            --stack-name $STACK_NAME \
            --resolve-s3 \
            --capabilities CAPABILITY_IAM \
            --region $AWS_REGION \
            --no-fail-on-empty-changeset \
            --parameter-overrides JwtSecret='${{ secrets.JWT_SECRET }}'

      - name: Output API URL
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?OutputKey=='ApiUrl'].OutputValue" --output text --region $AWS_REGION)
          echo "API_URL=$API_URL" >> $GITHUB_ENV
          echo "Serverless API URL: $API_URL"
