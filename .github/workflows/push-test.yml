name: Scheduled Push Test to Mobile Account

on:
  schedule:
    - cron: "*/15 * * * *"  # every 15 minutes
  workflow_dispatch:

permissions:
  contents: read

env:
  BACKEND_URL: ${{ vars.PUSH_BACKEND_URL || vars.BACKEND_OVERRIDE_URL || 'https://api.ticktocktasks.com' }}
  TEST_EMAIL: ${{ secrets.PUSH_TEST_EMAIL || 'jefsmith31@gmail.com' }}
  TEST_PASSWORD: ${{ secrets.PUSH_TEST_PASSWORD || '' }}

jobs:
  push_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is installed
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y jq
          fi

      - name: Validate configuration
        id: cfg
        run: |
          set -e
          if [ -z "${BACKEND_URL}" ]; then
            echo "Backend URL is not set. Set repo variable PUSH_BACKEND_URL or BACKEND_OVERRIDE_URL." >&2
            exit 1
          fi
          if [ -z "${TEST_PASSWORD}" ]; then
            echo "No PUSH_TEST_PASSWORD secret configured. Skipping run." >&2
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Login to backend
        if: steps.cfg.outputs.skip != 'true'
        id: login
        env:
          URL: ${{ env.BACKEND_URL }}
          EMAIL: ${{ env.TEST_EMAIL }}
          PASSWORD: ${{ env.TEST_PASSWORD }}
        run: |
          set -e
          echo "Logging in to ${URL} as ${EMAIL}"
          RESP=$(curl -sS -X POST -H 'Content-Type: application/json' \
            --data "{\"email\":\"${EMAIL}\",\"password\":\"${PASSWORD}\"}" \
            "${URL%/}/api/auth/login")
          TOKEN=$(echo "$RESP" | jq -r '.token // empty')
          if [ -z "$TOKEN" ]; then
            echo "Login failed. Response:" >&2
            echo "$RESP" >&2
            exit 1
          fi
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Trigger test push
        if: steps.cfg.outputs.skip != 'true'
        env:
          URL: ${{ env.BACKEND_URL }}
          TOKEN: ${{ steps.login.outputs.token }}
        run: |
          set -e
          echo "Sending test push via ${URL%/}/api/push/test"
          RESP=$(curl -sS -X POST -H "Authorization: Bearer ${TOKEN}" -H 'Content-Type: application/json' \
            "${URL%/}/api/push/test")
          echo "Backend response: $RESP"

      - name: Summary
        if: steps.cfg.outputs.skip != 'true'
        run: |
          echo "A test push was requested for the configured test account." >> $GITHUB_STEP_SUMMARY
          echo "Backend: ${BACKEND_URL}" >> $GITHUB_STEP_SUMMARY
          echo "Email: ${TEST_EMAIL}" >> $GITHUB_STEP_SUMMARY
          echo "Note: ensure this account has logged in on the phone and enabled notifications." >> $GITHUB_STEP_SUMMARY
