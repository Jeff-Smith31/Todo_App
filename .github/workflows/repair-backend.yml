name: Repair Backend via SSM

on:
  workflow_dispatch:
    inputs:
      backend_stack_name:
        description: "Backend CloudFormation stack name"
        required: false
        default: "ttt-backend"
      backend_region:
        description: "AWS region for backend EC2"
        required: false
        default: "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  repair:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.backend_region || vars.BACKEND_REGION || 'us-east-1' }}

      - name: Make scripts executable
        run: |
          chmod +x scripts/diagnose-backend-ssm.sh || true

      - name: Run SSM repair on backend host
        env:
          BACKEND_STACK_NAME: ${{ inputs.backend_stack_name || vars.BACKEND_STACK_NAME || 'ttt-backend' }}
          BACKEND_REGION: ${{ inputs.backend_region || vars.BACKEND_REGION || 'us-east-1' }}
        run: |
          set -e
          echo "Running diagnose-backend-ssm.sh --repair for stack $BACKEND_STACK_NAME in $BACKEND_REGION" >> $GITHUB_STEP_SUMMARY
          scripts/diagnose-backend-ssm.sh --repair | sed -n '1,500p'

      - name: Public health check
        env:
          BACKEND_STACK_NAME: ${{ inputs.backend_stack_name || vars.BACKEND_STACK_NAME || 'ttt-backend' }}
          BACKEND_REGION: ${{ inputs.backend_region || vars.BACKEND_REGION || 'us-east-1' }}
        run: |
          set -e
          BE_URL=$(aws cloudformation describe-stacks \
            --region "$BACKEND_REGION" \
            --stack-name "$BACKEND_STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='BackendEndpoint'].OutputValue | [0]" \
            --output text)
          if [ -z "$BE_URL" ] || [ "$BE_URL" = "None" ]; then
            echo "No backend endpoint resolved." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          CODE=$(curl -sk -o /dev/null -w "%{http_code}" "$BE_URL/healthz" || true)
          echo "Backend endpoint: $BE_URL" >> $GITHUB_STEP_SUMMARY
          echo "HTTPS /healthz -> $CODE" >> $GITHUB_STEP_SUMMARY
