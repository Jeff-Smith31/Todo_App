name: Backend Deploy to EC2 (ticktocktasks.com)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - 'infrastructure/backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  STACK_NAME: tt-backend
  DOMAIN_NAME: ticktocktasks.com
  VPC_ID: vpc-0fbbe4d79713c387a

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: github-backend-deploy

      - name: Validate Hosted Zone secret
        run: |
          test -n "${{ secrets.HOSTED_ZONE_ID }}" || { echo 'HOSTED_ZONE_ID secret missing'; exit 1; }

      - name: Install AWS CLI v2
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2

      - name: Find a subnet in the VPC (prefer public)
        id: subnet
        shell: bash
        run: |
          set -euo pipefail
          # Try to pick the first subnet in the VPC; allow override via secret SUBNET_ID if provided
          if [ -n "${{ secrets.SUBNET_ID }}" ]; then
            echo "id=${{ secrets.SUBNET_ID }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          SUBNET_ID=$(aws ec2 describe-subnets --filters Name=vpc-id,Values=$VPC_ID --query 'Subnets[0].SubnetId' --output text)
          if [ -z "$SUBNET_ID" ] || [ "$SUBNET_ID" = "None" ]; then
            echo "No subnet found in VPC $VPC_ID" >&2
            exit 1
          fi
          echo "id=$SUBNET_ID" >> $GITHUB_OUTPUT

      - name: Deploy/Update backend CloudFormation stack
        env:
          SUBNET_ID: ${{ steps.subnet.outputs.id }}
        run: |
          set -euo pipefail
          TPL=infrastructure/backend/template.yaml
          REPO_URL="${{ github.server_url }}/${{ github.repository }}.git"
          aws cloudformation deploy \
            --region "$AWS_REGION" \
            --stack-name "$STACK_NAME" \
            --template-file "$TPL" \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              DomainName="$DOMAIN_NAME" \
              HostedZoneId="${{ secrets.HOSTED_ZONE_ID }}" \
              VpcId="$VPC_ID" \
              SubnetId="$SUBNET_ID" \
              AllowedOrigins="https://$DOMAIN_NAME,https://www.$DOMAIN_NAME" \
              RepoUrl="$REPO_URL" \
              CreateApiDnsRecord="true"

      - name: Show backend outputs
        run: |
          aws cloudformation describe-stacks --region "$AWS_REGION" --stack-name "$STACK_NAME" \
            --query 'Stacks[0].Outputs[].[OutputKey,OutputValue]' --output table
